

-- Select Data that we are going to be using


SELECT location, date, total_cases, new_cases, total_deaths, population
FROM CovidDeaths
ORDER BY 1,2

-- looking at total cases vs total deaths
-- Shows Likelihood of dying if you contract covid in your country

SELECT location, date, total_cases, total_deaths, CAST(total_deaths as float)/total_cases*100 as DeathPercentage
FROM CovidDeaths
WHERE [location] like '%Brazil%'
ORDER BY 1,2

-- Looking at the Total cases vs population
-- shows what percentage of poipulation got covid

SELECT location, date, population, total_cases, CAST(total_cases as float)/population*100 as PercentPopulationInfected
FROM CovidDeaths
WHERE [location] like '%Brazil%'
ORDER BY 1,2

-- Looking at Countries with highest infection rate compared to population


SELECT location, population, MAX(total_cases) as HighestInfectionCount,  MAX(CAST(total_cases as float))/population*100 as PercentPopulationInfected
FROM CovidDeaths
--WHERE [location] like '%Brazil%'
GROUP BY [location], population
ORDER BY PercentPopulationInfected DESC


-- Breaking down by Continent

-- Showing continents with the highest death count per population

SELECT continent, MAX(total_deaths) as TotalDeathCount
FROM CovidDeaths
WHERE continent is not null
GROUP BY [continent]
ORDER BY TotalDeathCount DESC


-- GLOBAL NUMBERS 
-- Daily

SELECT  date, SUM(new_cases) as TotalCases, SUM(new_deaths) as TotalDeaths, SUM(new_deaths)/SUM(new_cases) * 100 as DeathPercentage
FROM CovidDeaths
WHERE [continent] is not NULL
GROUP BY [date]
ORDER BY 1,2

-- Worlwide Total

SELECT  SUM(new_cases) as TotalCases, SUM(new_deaths) as TotalDeaths, SUM(new_deaths)/SUM(new_cases) * 100 as DeathPercentage
FROM CovidDeaths
WHERE [continent] is not NULL
--GROUP BY [date]
ORDER BY 1,2

-- Joining Both tables 
-- Looking at total population vs vaccinations

WITH PopvsVac (Continent, location, date, population, new_vaccinations, RollingPeopleVaccinated)
AS
(
SELECT dea.continent, dea.[location], dea.[date], dea.population, vac.new_vaccinations
, SUM(CONVERT(int,vac.new_vaccinations)) OVER (PARTITION by dea.location ORDER by dea.location, dea.date) as RollingPeopleVaccinated
FROM  CovidDeaths AS dea 
JOIN  CovidVaccinations AS vac 
    ON dea.[location] = vac.LOCATION
    AND dea.[date] = vac.DATE
WHERE dea.continent is not NULL
--ORDER by 2,3
)
SELECT *, (RollingPeopleVaccinated/CAST(population AS float))*100
FROM PopvsVac


-- TEMP TABLE

DROP TABLE IF EXISTS #PercentPopulationVaccinated
Create TABLE #PercentPopulationVaccinated
(
Continent NVARCHAR(255),
LOCATION NVARCHAR(255),
DATE DATETIME,
population NUMERIC,
new_vaccinations NUMERIC,
RollingPeopleVaccinated NUMERIC
)
INSERT INTO #PercentPopulationVaccinated
SELECT dea.continent, dea.[location], dea.[date], dea.population, vac.new_vaccinations
, SUM(CONVERT(int,vac.new_vaccinations)) OVER (PARTITION by dea.location ORDER by dea.location, dea.date) as RollingPeopleVaccinated
FROM  CovidDeaths AS dea 
JOIN  CovidVaccinations AS vac 
    ON dea.[location] = vac.LOCATION
    AND dea.[date] = vac.DATE
--WHERE dea.continent is not NULL
--ORDER by 2,3


SELECT *, (RollingPeopleVaccinated/CAST(population AS float))*100
FROM #PercentPopulationVaccinated


-- Creating view to store data for later visualizations

Create VIEW PercentPopulationVaccinated AS
SELECT dea.continent, dea.[location], dea.[date], dea.population, vac.new_vaccinations
, SUM(CONVERT(int,vac.new_vaccinations)) OVER (PARTITION by dea.location ORDER by dea.location, dea.date) as RollingPeopleVaccinated
FROM  CovidDeaths AS dea 
JOIN  CovidVaccinations AS vac 
    ON dea.[location] = vac.LOCATION
    AND dea.[date] = vac.DATE
WHERE dea.continent is not NULL
--ORDER by 2,3

SELECT *
FROM PercentPopulationVaccinated